openapi: 3.0.0
info:
  title: Boilerplate API
  description: Typescript boilerplate Swagger Document
  version: 0.1.9
servers:
  - url: http://localhost:8000
    description: MyApi
paths:
  /login:
    post:
      summary: Login User
      tags:
        - 'Auth Api'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        201:
          description: Logged In successfully...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /getUsers:
    get:
      security:
        - bearerAuth: []
      summary: Returns a list of users.
      tags:
        - 'CRUD Api'
      description: Returns list of registered users...
      responses:
        '200': # status code
          description: A JSON array of user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /createUser:
    post:
      security:
        - bearerAuth: []
      summary: Creates new user
      tags:
        - 'CRUD Api'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /updateUser/{userId}:
    patch:
      security:
        - bearerAuth: []
      summary: Update User Data
      tags:
        - 'CRUD Api'
      description: Updating whole user or some userData
      parameters:
        - in: path
          name: userId
          required: true
          description: userId should be Numeric
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User Updated Successfully.

  /deleteUser/{userId}:
    delete:
      security:
        - bearerAuth: []
      summary: Delete user by id
      tags:
        - 'CRUD Api'
      parameters:
        - in: path
          name: userId
          required: true
          description: userId should be Numeric
          schema:
            type: integer
      responses:
        200:
          description: User Deleted successfully...

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          example: sirajalig86@gmail.com
        password:
          type: string
          example: 123
        role_id:
          type: number
          example: 1

    LoginUser:
      type: object
      properties:
        email:
          type: string
          example: sirajalig86@gmail.com
        password:
          type: string
          example: 123
